--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

SELECT * FROM BIT_DB.Spotifydata;

--What is the average danceability by artist and track? 
SELECT artist_name, track_name, avg(danceability) as avg_dance
FROM BIT_DB.spotifydata
GROUP BY track_name
ORDER BY avg_dance desc;

--Who are the top 10 artists based on popularity? 
SELECT distinct artist_name, avg(popularity) as avg_pop
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_pop DESC
LIMIT 10;

--What artist released the longest song? 
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

--What's the average danceability for the 5 most popular songs?
SELECT avg(danceability) as avg_danceability
FROM BIT_DB.Spotifydata
WHERE popularity IN (
    SELECT popularity
    FROM BIT_DB.Spotifydata
    ORDER BY popularity desc
    LIMIT 5);
    
--What is average energy for the songs with a tempo higher than 140?
SELECT avg(energy) 
FROM BIT_DB.Spotifydata
WHERE tempo > 140;

--What is the highest energy song by the artist Olivia Rodrigo?
SELECT artist_name, track_name, energy
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Olivia Rodrigo'
ORDER BY energy desc
LIMIT 1;
